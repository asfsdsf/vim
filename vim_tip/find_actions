~/Software/vim/vim_tip/find_actions
g;          Go to last edited location
<c-^>       Switch to next buffer tab
gt          Go to next tab
gT          Go to previous tab
<a-j>       Add multiple cursor below
<a-k>       Add multiple cursor above
<c-n>       Find and extend multiple cursor in visual mode
<Space>f    Search by lines using CtrlP(Find Strings everywhere)
<c-w><c-_>  Expand current split vertically
<c-w><c-|>  Expand current split horizontally
<c-w><c-w>  Switch to next split
<c-w>v      Split current window vertically
<c-w>s      Split current window horizontally
<c-w>H      Move the current window(split) to the "far left"
<c-w>J      Move the current window(split) to the "far down"
<c-w>K      Move the current window(split) to the "far up"
<c-w>L      Move the current window(split) to the "far right"
<c-w>h      Move to the "far left" window(split)
<c-w>j      Move to the "far down" window(split)
<c-w>k      Move to the "far up" window(split)
<c-w>l      Move to the "far right" window(split)
<c-t>       Open in new tab(CtrlP or fzf)
<c-m>       Open ctags
z<          Multiple cursor: align at cursors by character
]           Multiple cursor: find next
[           Multiple cursor: find previous
}           Multiple cursor: goto next
{           Multiple cursor: goto previous
g/          Multiple cursor: start regex search
<leader>a   Multiple cursor: select all that match pattern
<c-c>       Multiple cursor: change match case type
Q           Multiple cursor: cancel current selection
q           Multiple cursor: cancel current selection in cursor mode and ignore curret selection and find the next in visual mode
h           Move left
j           Move down
k           Move up
l           Move right
gg          Go to beginning of file
G           Go to end of file
ngg         Go to nth line
:noh        cancel all current highlight
:r!command  execute external command and read output to current buffer
o: open in prev window
t           NerdTree: Open in new tab
<Space>n    Open NerdTree
go          NerdTree: preview   (File node mappings) 
t           NerdTree: open in new tab   (File node mappings) 
T           NerdTree: open in new tab silently   (File node mappings) 
i           NerdTree: open split   (File node mappings) 
gi          NerdTree: preview split   (File node mappings) 
s           NerdTree: open vsplit   (File node mappings) 
gs          NerdTree: preview vsplit   (File node mappings) 
o           NerdTree: open & close node   (Directory node mappings) 
O           NerdTree: recursively open node   (Directory node mappings) 
t           NerdTree: open in new tab   (Directory node mappings) 
T           NerdTree: open in new tab silently   (Directory node mappings) 
R           NerdTree: Refresh current root directory
r           NerdTree: Refresh cursor directory
x           NerdTree: close parent of node   (Directory node mappings) 
X           NerdTree: close all child nodes of current node recursively   (Directory node mappings) 
e           NerdTree: explore selected dir   (Directory node mappings) 
m           NerdTree: open nerdtree menu to do some operation(Create dir,delete dir,open in system software...)
]e          Go to next error
[e          Go to previous error
<c-/><c-/>  Comment the line
<c-f>       YouCompleteMe(YCM): go to definition (else declaration if no definition found)
<c-b>       YouCompleteMe(YCM): go to declaration
<c-y>       YouCompleteMe(YCM): comfirm selection
<c-e>       YouCompleteMe(YCM): cancel completion and redisplay origin word
<c-:>       snippets: trigger snippets
<c-f>       snippets: jump forward to fill in items
<c-b>       snippets: jump backward to fill in items
<c-o>       Jump back to previous visited location
<c-i>       Jump forward to next visited location
L           Go to buttom of screen
H           Go to top of screen
M           Go to middle of screen
%           Go to the match character of the pair
vim -R      Open file by vim as read-only mode(can make changes,but can't save)
vim -M      Open file by vim as read-only mode(can not make changes)
vim +n      Open file and go to the nth line
vim +/str   Go to the first match of the str pattern
vim +?str   Go to the last match of the str pattern
<S-right>   Go to begining of next word
<S-left>    Go to begining of previous word
ma          Bookmark the current location with name 'a'
`a          Jump to the exact location of bookmark 'a'
'a          Jump to the beginning of the line containing the bookmark 'a'
mA          Bookmark the current location with name 'a' globally
:marks      Display all bookmarks
`"          Go to the position where you did last edit before exit
`.          Go to the position of where the last change was made
`^          Go to the position where the cursor was the last time when exiting insert mode
gv          Start Visual mode with the same area as the previous area and the same mode.
:'<,'>      Type : in visual mode to invoke this command.Execute command to manipulate the selected text
D           Delete using system register
Y           Yank using system register
<A-h>       Move left in insert mode
<A-j>       Move down in insert mode
<A-k>       Move up in insert mode
<A-l>       Move right in insert mode
<A-H>       Move to left split
<A-J>       Move to down split
<A-K>       Move to up split
<A-L>       Move to right split
<c-R>       To find a string under working directory
PythonPrint Open odd python file to edit a python program to print.Press again to exit and print
<c-e>       Open recent files
[[          Go to preious function
]]          Go to next function
[]          Go to end of previous function
][          Go to end of next function
/           Search forward
?           Search backward
.           Concat two strings in ex mode
".          Register for last inserted text
<a-h>       Insert mode: move the last word(<c-left>)
<a-j>       Insert mode: add new line below and go to that(<c-o>o)
<a-k>       Insert mode: add new line above and go to that(<c-o>O)
<a-l>       Insert mode: move the previous word(<c-right>)
<c-h>       Insert mode: move to left(<left>)
<c-j>       Insert mode: move to down(<down>)
<c-k>       Insert mode: move to up(<up>)
<c-l>       Insert mode: move to right(<right>)
<c-b>       Insert mode: move to the end(<c-o>^)
<c-e>       Insert mode: move to the start(<c-o>$)
<c-p>       Insert mode: paste(<c-o>p)
<c-d>       Insert mode: delete(<c-o>d)
<space>r    Run current python file(write automatically)
cs          Vim-Surround: change surround type t1 to t2 with motion
ds          Vim-Surround: delete surround type t
ys          Vim-Surround: add surround type t with motion
yss         Vim-Surround: add surround around the sentence
DiffSaved   Difference between buffer and file
CompareClipboard    Check difference between current buffer and clipboard
